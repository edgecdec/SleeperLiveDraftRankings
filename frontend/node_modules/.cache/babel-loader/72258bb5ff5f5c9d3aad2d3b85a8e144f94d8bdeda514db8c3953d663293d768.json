{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Users,ChevronDown,ChevronUp,User,Shield,Star,Clock,Cross}from'lucide-react';import clsx from'clsx';import{getPositionConfig}from'../constants/positions';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MyRoster=_ref=>{let{leagueId,username,draftId,isVisible=true,lastUpdated,isSidebar=false}=_ref;console.log('MyRoster: Component rendered with props:',{leagueId,username,draftId,isVisible,isSidebar});const[rosterData,setRosterData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[expandedPositions,setExpandedPositions]=useState({});useEffect(()=>{if(leagueId&&username&&isVisible){// Clear previous roster data when league changes and show loading\nsetRosterData(null);setError(null);setLoading(true);// Ensure loading state is shown during transition\nfetchRosterData();}},[leagueId,username,draftId,isVisible,lastUpdated]);// Clear data immediately when league changes\nuseEffect(()=>{console.log('MyRoster: League changed to:',leagueId);setRosterData(null);setError(null);setExpandedPositions({});},[leagueId]);const fetchRosterData=async()=>{console.log('MyRoster: Fetching roster data for league:',leagueId,'username:',username);// Ensure we have the required parameters\nif(!leagueId||!username){console.log('MyRoster: Missing required parameters, skipping fetch');return;}setLoading(true);setError(null);try{var _data$positions,_data$positions$QB,_data$positions$QB$;const params=new URLSearchParams({username});if(draftId){params.append('draft_id',draftId);}// Add timestamp to prevent caching\nparams.append('_t',Date.now().toString());const apiUrl=`/api/league/${leagueId}/my-roster?${params}`;console.log('MyRoster: Making API call to:',apiUrl);console.log('MyRoster: Full URL breakdown - leagueId:',leagueId,'params:',params.toString());const response=await fetch(apiUrl,{// Add cache-busting headers\nheaders:{'Cache-Control':'no-cache, no-store, must-revalidate','Pragma':'no-cache','Expires':'0'}});const data=await response.json();console.log('MyRoster: Received roster data for league:',leagueId,'Total players:',data.total_players,'First QB:',(_data$positions=data.positions)===null||_data$positions===void 0?void 0:(_data$positions$QB=_data$positions.QB)===null||_data$positions$QB===void 0?void 0:(_data$positions$QB$=_data$positions$QB[0])===null||_data$positions$QB$===void 0?void 0:_data$positions$QB$.name);if(!response.ok){throw new Error(data.error||'Failed to fetch roster');}setRosterData(data);// Auto-expand positions with players\nconst newExpanded={};Object.keys(data.positions).forEach(pos=>{newExpanded[pos]=true;});setExpandedPositions(newExpanded);}catch(err){setError(err.message);}finally{setLoading(false);}};const togglePosition=position=>{setExpandedPositions(prev=>({...prev,[position]:!prev[position]}));};const getPositionOrder=()=>{return['QB','RB','WR','TE','K','DEF'];};const getStatusIcon=status=>{switch(status){case'drafted':return/*#__PURE__*/_jsx(Clock,{className:\"w-3 h-3 text-green-500\",title:\"Drafted This Draft\"});case'taxi':return/*#__PURE__*/_jsx(Shield,{className:\"w-3 h-3 text-blue-500\",title:\"Taxi Squad\"});case'reserve':return/*#__PURE__*/_jsx(Cross,{className:\"w-3 h-3 text-red-500\",title:\"Injured Reserve (IR)\"});case'rostered':return null;// No icon for regular rostered players\ndefault:return null;}};const getStatusColor=status=>{switch(status){case'drafted':return'text-green-700 dark:text-green-300 bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800';case'taxi':return'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800';case'reserve':return'text-red-600 dark:text-red-400 bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800';case'rostered':return'text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700';default:return'text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700';}};const getStarterInfo=position=>{var _rosterData$roster_se;if(!(rosterData!==null&&rosterData!==void 0&&(_rosterData$roster_se=rosterData.roster_settings)!==null&&_rosterData$roster_se!==void 0&&_rosterData$roster_se.starter_counts))return null;const starterCount=rosterData.roster_settings.starter_counts[position]||0;const flexCount=rosterData.roster_settings.starter_counts['FLEX']||0;const superFlexCount=rosterData.roster_settings.starter_counts['SUPER_FLEX']||0;let info='';if(starterCount>0){info+=`${starterCount} starter${starterCount>1?'s':''}`;}// Add FLEX eligibility info\nif(['RB','WR','TE'].includes(position)&&flexCount>0){info+=info?`, +${flexCount} FLEX`:`${flexCount} FLEX`;}// Add SUPER_FLEX eligibility info  \nif(['QB','RB','WR','TE'].includes(position)&&superFlexCount>0){info+=info?`, +${superFlexCount} SF`:`${superFlexCount} SF`;}return info||null;};const getPositionColor=position=>{// Use consistent colors from constants, but with darker text variants for roster\nconst config=getPositionConfig(position);const colorMap={'red':'text-red-700 dark:text-red-400','green':'text-green-700 dark:text-green-400','blue':'text-blue-700 dark:text-blue-400','yellow':'text-yellow-700 dark:text-yellow-400','purple':'text-purple-700 dark:text-purple-400','gray':'text-gray-700 dark:text-gray-300'};return colorMap[config.color]||'text-gray-700 dark:text-gray-300';};const getAllStartersAndBench=()=>{var _rosterData$roster_se2,_rosterData$roster_se3;if(!(rosterData!==null&&rosterData!==void 0&&(_rosterData$roster_se2=rosterData.roster_settings)!==null&&_rosterData$roster_se2!==void 0&&_rosterData$roster_se2.starter_counts)){return{starters:[],bench:[],emptyStarters:[],emptyBench:[]};}const starterCounts=rosterData.roster_settings.starter_counts;const benchSlots=((_rosterData$roster_se3=rosterData.roster_settings)===null||_rosterData$roster_se3===void 0?void 0:_rosterData$roster_se3.bench_slots)||0;const allPlayers=[];// Collect all players with their position and rank\nif(rosterData.positions){Object.entries(rosterData.positions).forEach(_ref2=>{let[position,players]=_ref2;players.forEach(player=>{allPlayers.push({...player,originalPosition:position});});});}console.log('MyRoster: Total players collected:',allPlayers.length);console.log('MyRoster: Player IDs:',allPlayers.map(p=>p.player_id));// Sort all players by rank (lower = better)\nallPlayers.sort((a,b)=>{const rankA=a.rank===999?9999:a.rank;const rankB=b.rank===999?9999:b.rank;return rankA-rankB;});const starters=[];const bench=[];const emptyStarters=[];const emptyBench=[];const usedPlayers=new Set();// Fill dedicated position starters first (QB, RB, WR, TE, K, DEF)\n['QB','RB','WR','TE','K','DEF'].forEach(position=>{const needed=starterCounts[position]||0;const positionPlayers=allPlayers.filter(p=>p.originalPosition===position&&!usedPlayers.has(p.player_id));// Add filled positions\nfor(let i=0;i<needed&&i<positionPlayers.length;i++){const player=positionPlayers[i];starters.push({...player,starterType:position,slotNumber:i+1});usedPlayers.add(player.player_id);console.log(`MyRoster: Added ${player.name} to starters as ${position}`);}// Add empty positions for unfilled slots\nfor(let i=positionPlayers.length;i<needed;i++){emptyStarters.push({starterType:position,slotNumber:i+1,isEmpty:true});console.log(`MyRoster: Added empty ${position} slot ${i+1}`);}});// Fill FLEX positions (RB, WR, TE eligible)\nconst flexNeeded=starterCounts['FLEX']||0;const flexEligible=allPlayers.filter(p=>['RB','WR','TE'].includes(p.originalPosition)&&!usedPlayers.has(p.player_id));// Add filled FLEX positions\nfor(let i=0;i<flexNeeded&&i<flexEligible.length;i++){const player=flexEligible[i];starters.push({...player,starterType:'FLEX',slotNumber:i+1});usedPlayers.add(player.player_id);console.log(`MyRoster: Added ${player.name} to starters as FLEX`);}// Add empty FLEX positions\nfor(let i=flexEligible.length;i<flexNeeded;i++){emptyStarters.push({starterType:'FLEX',slotNumber:i+1,isEmpty:true});console.log(`MyRoster: Added empty FLEX slot ${i+1}`);}// Fill REC_FLEX positions (WR, TE eligible - Guillotine League)\nconst recFlexNeeded=starterCounts['REC_FLEX']||0;const recFlexEligible=allPlayers.filter(p=>['WR','TE'].includes(p.originalPosition)&&!usedPlayers.has(p.player_id));// Add filled REC_FLEX positions\nfor(let i=0;i<recFlexNeeded&&i<recFlexEligible.length;i++){const player=recFlexEligible[i];starters.push({...player,starterType:'REC_FLEX',slotNumber:i+1});usedPlayers.add(player.player_id);console.log(`MyRoster: Added ${player.name} to starters as REC_FLEX`);}// Add empty REC_FLEX positions\nfor(let i=recFlexEligible.length;i<recFlexNeeded;i++){emptyStarters.push({starterType:'REC_FLEX',slotNumber:i+1,isEmpty:true});console.log(`MyRoster: Added empty REC_FLEX slot ${i+1}`);}// Fill SUPER_FLEX positions (QB, RB, WR, TE eligible)\nconst superFlexNeeded=starterCounts['SUPER_FLEX']||0;const superFlexEligible=allPlayers.filter(p=>['QB','RB','WR','TE'].includes(p.originalPosition)&&!usedPlayers.has(p.player_id));// Add filled SUPER_FLEX positions\nfor(let i=0;i<superFlexNeeded&&i<superFlexEligible.length;i++){const player=superFlexEligible[i];starters.push({...player,starterType:'SUPER_FLEX',slotNumber:i+1});usedPlayers.add(player.player_id);console.log(`MyRoster: Added ${player.name} to starters as SUPER_FLEX`);}// Add empty SUPER_FLEX positions\nfor(let i=superFlexEligible.length;i<superFlexNeeded;i++){emptyStarters.push({starterType:'SUPER_FLEX',slotNumber:i+1,isEmpty:true});console.log(`MyRoster: Added empty SUPER_FLEX slot ${i+1}`);}// All remaining players go to bench\nallPlayers.forEach(player=>{if(!usedPlayers.has(player.player_id)){bench.push(player);console.log(`MyRoster: Added ${player.name} to bench`);}});// Add empty bench slots\nconst currentBenchCount=bench.length;for(let i=currentBenchCount;i<benchSlots;i++){emptyBench.push({isEmpty:true,slotNumber:i+1});console.log(`MyRoster: Added empty bench slot ${i+1}`);}console.log('MyRoster: Final counts - Starters:',starters.length,'Empty Starters:',emptyStarters.length,'Bench:',bench.length,'Empty Bench:',emptyBench.length);console.log('MyRoster: Used players:',Array.from(usedPlayers));return{starters,bench,emptyStarters,emptyBench};};const getStarterTypeDisplay=(starterType,slotNumber)=>{const displays={'QB':`QB${slotNumber>1?slotNumber:''}`,'RB':`RB${slotNumber>1?slotNumber:''}`,'WR':`WR${slotNumber>1?slotNumber:''}`,'TE':`TE${slotNumber>1?slotNumber:''}`,'K':`K${slotNumber>1?slotNumber:''}`,'DEF':`DEF${slotNumber>1?slotNumber:''}`,'FLEX':`FLEX${slotNumber>1?slotNumber:''}`,'REC_FLEX':`R-FLEX${slotNumber>1?slotNumber:''}`,'SUPER_FLEX':`SF${slotNumber>1?slotNumber:''}`};return displays[starterType]||starterType;};const getStarterTypeColor=starterType=>{const colors={'QB':'bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300','RB':'bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300','WR':'bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300','TE':'bg-orange-100 dark:bg-orange-900/30 text-orange-700 dark:text-orange-300','K':'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-700 dark:text-yellow-300','DEF':'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300','FLEX':'bg-indigo-100 dark:bg-indigo-900/30 text-indigo-700 dark:text-indigo-300','REC_FLEX':'bg-cyan-100 dark:bg-cyan-900/30 text-cyan-700 dark:text-cyan-300','SUPER_FLEX':'bg-pink-100 dark:bg-pink-900/30 text-pink-700 dark:text-pink-300'};return colors[starterType]||'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300';};if(!isVisible)return null;if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-4\",children:[/*#__PURE__*/_jsx(Users,{className:\"w-5 h-5 text-blue-600\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"My Roster\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-gray-600 dark:text-gray-300\",children:\"Loading roster...\"})]})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-4\",children:[/*#__PURE__*/_jsx(Users,{className:\"w-5 h-5 text-blue-600\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:\"My Roster\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-red-600 dark:text-red-400 text-center py-4\",children:[\"Error: \",error]})]});}if(!rosterData)return null;const{starters,bench,emptyStarters,emptyBench}=getAllStartersAndBench();const totalPlayers=starters.length+bench.length;const totalSlots=starters.length+emptyStarters.length+bench.length+emptyBench.length;// Show empty state only if no roster settings are available\nif(!rosterData.roster_settings){return/*#__PURE__*/_jsxs(\"div\",{className:clsx(\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\",isSidebar?\"p-3\":\"p-4\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-4\",children:[/*#__PURE__*/_jsx(Users,{className:\"w-5 h-5 text-blue-600\"}),/*#__PURE__*/_jsx(\"h3\",{className:clsx(\"font-semibold text-gray-900 dark:text-white\",isSidebar?\"text-base\":\"text-lg\"),children:\"My Roster\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(Users,{className:\"w-12 h-12 mx-auto mb-4 text-gray-300 dark:text-gray-600\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-medium text-gray-900 dark:text-white mb-2\",children:\"Roster Not Available\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-300 text-sm\",children:\"Roster information is not available for this league.\"})]})]});}return/*#__PURE__*/_jsxs(\"div\",{className:clsx(\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\",isSidebar?\"p-3\":\"p-4\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(Users,{className:\"w-5 h-5 text-blue-600\"}),/*#__PURE__*/_jsx(\"h3\",{className:clsx(\"font-semibold text-gray-900 dark:text-white\",isSidebar?\"text-base\":\"text-lg\"),children:\"My Roster\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[\"(\",totalPlayers,\"/\",totalSlots,\" filled)\"]}),rosterData.drafted_this_draft>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-green-600 dark:text-green-400 bg-green-100 dark:bg-green-900/30 px-2 py-1 rounded\",children:[\"+\",rosterData.drafted_this_draft,\" drafted\"]})]}),!isSidebar&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1 text-sm text-gray-600 dark:text-gray-300\",children:[/*#__PURE__*/_jsx(User,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:rosterData.username})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[(starters.length>0||emptyStarters.length>0)&&/*#__PURE__*/_jsxs(\"div\",{className:\"border border-green-200 dark:border-green-800 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-3 py-2 bg-green-50 dark:bg-green-900/20 border-b border-green-200 dark:border-green-800 flex items-center justify-between\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-green-800 dark:text-green-300 uppercase tracking-wide text-sm\",children:[\"Starting Lineup (\",starters.length,\"/\",starters.length+emptyStarters.length,\")\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800\",children:[starters.map((player,index)=>/*#__PURE__*/_jsx(\"div\",{className:clsx(\"px-3 py-2 flex items-center justify-between border-l-4 border-green-400\",index!==starters.length+emptyStarters.length-1&&\"border-b border-gray-200 dark:border-gray-700\",getStatusColor(player.status)),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:clsx(\"text-xs font-medium px-2 py-1 rounded uppercase tracking-wide\",getStarterTypeColor(player.starterType)),children:getStarterTypeDisplay(player.starterType,player.slotNumber)}),getStatusIcon(player.status),/*#__PURE__*/_jsx(\"span\",{className:clsx(\"font-medium\",getPositionColor(player.originalPosition)),children:player.name}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:player.team!=='FA'?player.team:'Free Agent'}),player.rank&&player.rank!==999&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-green-600 dark:text-green-400 bg-green-100 dark:bg-green-900/30 px-1 rounded\",children:[\"#\",player.rank]}),player.pick_no&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-green-600 dark:text-green-400\",children:[\"Pick #\",player.pick_no]})]})},`starter-${player.player_id}-${player.starterType}-${index}`)),emptyStarters.map((emptySlot,index)=>/*#__PURE__*/_jsx(\"div\",{className:clsx(\"px-3 py-2 flex items-center justify-between border-l-4 border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700/50\",starters.length+index!==starters.length+emptyStarters.length-1&&\"border-b border-gray-200 dark:border-gray-700\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:clsx(\"text-xs font-medium px-2 py-1 rounded uppercase tracking-wide\",\"bg-gray-200 dark:bg-gray-600 text-gray-600 dark:text-gray-300\"),children:getStarterTypeDisplay(emptySlot.starterType,emptySlot.slotNumber)}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500 dark:text-gray-400 italic\",children:\"Empty - Need to draft\"})]})},`empty-starter-${emptySlot.starterType}-${emptySlot.slotNumber}`))]})]}),(bench.length>0||emptyBench.length>0)&&/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 dark:border-gray-700 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-3 py-2 bg-gray-50 dark:bg-gray-700 border-b border-gray-200 dark:border-gray-600 flex items-center justify-between\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-gray-700 dark:text-gray-300 uppercase tracking-wide text-sm\",children:[\"Bench (\",bench.length,\"/\",bench.length+emptyBench.length,\")\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 dark:bg-gray-800\",children:[bench.map((player,index)=>/*#__PURE__*/_jsx(\"div\",{className:clsx(\"px-3 py-2 flex items-center justify-between\",index!==bench.length+emptyBench.length-1&&\"border-b border-gray-200 dark:border-gray-700\",getStatusColor(player.status)),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:clsx(\"text-xs font-medium px-2 py-1 rounded uppercase tracking-wide bg-gray-100 dark:bg-gray-700\",getPositionColor(player.originalPosition)),children:player.originalPosition}),getStatusIcon(player.status),/*#__PURE__*/_jsx(\"span\",{className:clsx(\"font-medium\",getPositionColor(player.originalPosition)),children:player.name}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:player.team!=='FA'?player.team:'Free Agent'}),player.rank&&player.rank!==999&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-1 rounded\",children:[\"#\",player.rank]}),player.pick_no&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-green-600 dark:text-green-400\",children:[\"Pick #\",player.pick_no]})]})},`bench-${player.player_id}-${index}`)),emptyBench.map((emptySlot,index)=>/*#__PURE__*/_jsx(\"div\",{className:clsx(\"px-3 py-2 flex items-center justify-between bg-gray-100 dark:bg-gray-700/50\",bench.length+index!==bench.length+emptyBench.length-1&&\"border-b border-gray-200 dark:border-gray-700\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium px-2 py-1 rounded uppercase tracking-wide bg-gray-200 dark:bg-gray-600 text-gray-600 dark:text-gray-300\",children:\"BENCH\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500 dark:text-gray-400 italic\",children:\"Empty bench slot\"})]})},`empty-bench-${emptySlot.slotNumber}`))]})]})]}),rosterData.roster_settings&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 pt-3 border-t border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-xs text-gray-500 dark:text-gray-400\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-700 dark:text-gray-300 mb-1\",children:\"Roster Structure\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1\",children:[Object.entries(rosterData.roster_settings.starter_counts).map(_ref3=>{let[position,count]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[position,\":\"]}),/*#__PURE__*/_jsx(\"span\",{children:count})]},position);}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Bench:\"}),/*#__PURE__*/_jsx(\"span\",{children:rosterData.roster_settings.bench_slots||0})]}),rosterData.roster_settings.taxi_slots>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1\",children:[/*#__PURE__*/_jsx(Shield,{className:\"w-3 h-3 text-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Taxi:\"})]}),/*#__PURE__*/_jsx(\"span\",{children:rosterData.roster_settings.taxi_slots})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-700 dark:text-gray-300 mb-1\",children:\"Status Legend\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1\",children:[/*#__PURE__*/_jsx(Clock,{className:\"w-3 h-3 text-green-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Drafted today\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1\",children:[/*#__PURE__*/_jsx(Shield,{className:\"w-3 h-3 text-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Taxi squad\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1\",children:[/*#__PURE__*/_jsx(Cross,{className:\"w-3 h-3 text-red-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Injured Reserve\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-gray-300 dark:bg-gray-600 rounded-sm\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Empty slot\"})]})]})]})]})})]});};export default MyRoster;","map":{"version":3,"names":["React","useState","useEffect","Users","ChevronDown","ChevronUp","User","Shield","Star","Clock","Cross","clsx","getPositionConfig","jsx","_jsx","jsxs","_jsxs","MyRoster","_ref","leagueId","username","draftId","isVisible","lastUpdated","isSidebar","console","log","rosterData","setRosterData","loading","setLoading","error","setError","expandedPositions","setExpandedPositions","fetchRosterData","_data$positions","_data$positions$QB","_data$positions$QB$","params","URLSearchParams","append","Date","now","toString","apiUrl","response","fetch","headers","data","json","total_players","positions","QB","name","ok","Error","newExpanded","Object","keys","forEach","pos","err","message","togglePosition","position","prev","getPositionOrder","getStatusIcon","status","className","title","getStatusColor","getStarterInfo","_rosterData$roster_se","roster_settings","starter_counts","starterCount","flexCount","superFlexCount","info","includes","getPositionColor","config","colorMap","color","getAllStartersAndBench","_rosterData$roster_se2","_rosterData$roster_se3","starters","bench","emptyStarters","emptyBench","starterCounts","benchSlots","bench_slots","allPlayers","entries","_ref2","players","player","push","originalPosition","length","map","p","player_id","sort","a","b","rankA","rank","rankB","usedPlayers","Set","needed","positionPlayers","filter","has","i","starterType","slotNumber","add","isEmpty","flexNeeded","flexEligible","recFlexNeeded","recFlexEligible","superFlexNeeded","superFlexEligible","currentBenchCount","Array","from","getStarterTypeDisplay","displays","getStarterTypeColor","colors","children","totalPlayers","totalSlots","drafted_this_draft","index","team","pick_no","emptySlot","_ref3","count","taxi_slots"],"sources":["/Users/edeclan/FantasyFootballTest/SleeperLiveDraftRankings/frontend/src/components/MyRoster.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Users, ChevronDown, ChevronUp, User, Shield, Star, Clock, Cross } from 'lucide-react';\nimport clsx from 'clsx';\nimport { getPositionConfig } from '../constants/positions';\n\nconst MyRoster = ({ leagueId, username, draftId, isVisible = true, lastUpdated, isSidebar = false }) => {\n  console.log('MyRoster: Component rendered with props:', { leagueId, username, draftId, isVisible, isSidebar });\n  \n  const [rosterData, setRosterData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [expandedPositions, setExpandedPositions] = useState({});\n\n  useEffect(() => {\n    if (leagueId && username && isVisible) {\n      // Clear previous roster data when league changes and show loading\n      setRosterData(null);\n      setError(null);\n      setLoading(true); // Ensure loading state is shown during transition\n      fetchRosterData();\n    }\n  }, [leagueId, username, draftId, isVisible, lastUpdated]);\n\n  // Clear data immediately when league changes\n  useEffect(() => {\n    console.log('MyRoster: League changed to:', leagueId);\n    setRosterData(null);\n    setError(null);\n    setExpandedPositions({});\n  }, [leagueId]);\n\n  const fetchRosterData = async () => {\n    console.log('MyRoster: Fetching roster data for league:', leagueId, 'username:', username);\n    \n    // Ensure we have the required parameters\n    if (!leagueId || !username) {\n      console.log('MyRoster: Missing required parameters, skipping fetch');\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const params = new URLSearchParams({ username });\n      if (draftId) {\n        params.append('draft_id', draftId);\n      }\n      // Add timestamp to prevent caching\n      params.append('_t', Date.now().toString());\n      \n      const apiUrl = `/api/league/${leagueId}/my-roster?${params}`;\n      console.log('MyRoster: Making API call to:', apiUrl);\n      console.log('MyRoster: Full URL breakdown - leagueId:', leagueId, 'params:', params.toString());\n      \n      const response = await fetch(apiUrl, {\n        // Add cache-busting headers\n        headers: {\n          'Cache-Control': 'no-cache, no-store, must-revalidate',\n          'Pragma': 'no-cache',\n          'Expires': '0'\n        }\n      });\n      const data = await response.json();\n      \n      console.log('MyRoster: Received roster data for league:', leagueId, 'Total players:', data.total_players, 'First QB:', data.positions?.QB?.[0]?.name);\n      \n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to fetch roster');\n      }\n\n      setRosterData(data);\n      \n      // Auto-expand positions with players\n      const newExpanded = {};\n      Object.keys(data.positions).forEach(pos => {\n        newExpanded[pos] = true;\n      });\n      setExpandedPositions(newExpanded);\n      \n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const togglePosition = (position) => {\n    setExpandedPositions(prev => ({\n      ...prev,\n      [position]: !prev[position]\n    }));\n  };\n\n  const getPositionOrder = () => {\n    return ['QB', 'RB', 'WR', 'TE', 'K', 'DEF'];\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'drafted':\n        return <Clock className=\"w-3 h-3 text-green-500\" title=\"Drafted This Draft\" />;\n      case 'taxi':\n        return <Shield className=\"w-3 h-3 text-blue-500\" title=\"Taxi Squad\" />;\n      case 'reserve':\n        return <Cross className=\"w-3 h-3 text-red-500\" title=\"Injured Reserve (IR)\" />;\n      case 'rostered':\n        return null; // No icon for regular rostered players\n      default:\n        return null;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'drafted':\n        return 'text-green-700 dark:text-green-300 bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800';\n      case 'taxi':\n        return 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800';\n      case 'reserve':\n        return 'text-red-600 dark:text-red-400 bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800';\n      case 'rostered':\n        return 'text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700';\n      default:\n        return 'text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700';\n    }\n  };\n\n  const getStarterInfo = (position) => {\n    if (!rosterData?.roster_settings?.starter_counts) return null;\n    \n    const starterCount = rosterData.roster_settings.starter_counts[position] || 0;\n    const flexCount = rosterData.roster_settings.starter_counts['FLEX'] || 0;\n    const superFlexCount = rosterData.roster_settings.starter_counts['SUPER_FLEX'] || 0;\n    \n    let info = '';\n    if (starterCount > 0) {\n      info += `${starterCount} starter${starterCount > 1 ? 's' : ''}`;\n    }\n    \n    // Add FLEX eligibility info\n    if (['RB', 'WR', 'TE'].includes(position) && flexCount > 0) {\n      info += info ? `, +${flexCount} FLEX` : `${flexCount} FLEX`;\n    }\n    \n    // Add SUPER_FLEX eligibility info  \n    if (['QB', 'RB', 'WR', 'TE'].includes(position) && superFlexCount > 0) {\n      info += info ? `, +${superFlexCount} SF` : `${superFlexCount} SF`;\n    }\n    \n    return info || null;\n  };\n\n  const getPositionColor = (position) => {\n    // Use consistent colors from constants, but with darker text variants for roster\n    const config = getPositionConfig(position);\n    const colorMap = {\n      'red': 'text-red-700 dark:text-red-400',\n      'green': 'text-green-700 dark:text-green-400', \n      'blue': 'text-blue-700 dark:text-blue-400',\n      'yellow': 'text-yellow-700 dark:text-yellow-400',\n      'purple': 'text-purple-700 dark:text-purple-400',\n      'gray': 'text-gray-700 dark:text-gray-300'\n    };\n    return colorMap[config.color] || 'text-gray-700 dark:text-gray-300';\n  };\n\n  const getAllStartersAndBench = () => {\n    if (!rosterData?.roster_settings?.starter_counts) {\n      return { starters: [], bench: [], emptyStarters: [], emptyBench: [] };\n    }\n\n    const starterCounts = rosterData.roster_settings.starter_counts;\n    const benchSlots = rosterData.roster_settings?.bench_slots || 0;\n    const allPlayers = [];\n    \n    // Collect all players with their position and rank\n    if (rosterData.positions) {\n      Object.entries(rosterData.positions).forEach(([position, players]) => {\n        players.forEach(player => {\n          allPlayers.push({\n            ...player,\n            originalPosition: position\n          });\n        });\n      });\n    }\n\n    console.log('MyRoster: Total players collected:', allPlayers.length);\n    console.log('MyRoster: Player IDs:', allPlayers.map(p => p.player_id));\n\n    // Sort all players by rank (lower = better)\n    allPlayers.sort((a, b) => {\n      const rankA = a.rank === 999 ? 9999 : a.rank;\n      const rankB = b.rank === 999 ? 9999 : b.rank;\n      return rankA - rankB;\n    });\n\n    const starters = [];\n    const bench = [];\n    const emptyStarters = [];\n    const emptyBench = [];\n    const usedPlayers = new Set();\n\n    // Fill dedicated position starters first (QB, RB, WR, TE, K, DEF)\n    ['QB', 'RB', 'WR', 'TE', 'K', 'DEF'].forEach(position => {\n      const needed = starterCounts[position] || 0;\n      const positionPlayers = allPlayers.filter(p => \n        p.originalPosition === position && !usedPlayers.has(p.player_id)\n      );\n      \n      // Add filled positions\n      for (let i = 0; i < needed && i < positionPlayers.length; i++) {\n        const player = positionPlayers[i];\n        starters.push({\n          ...player,\n          starterType: position,\n          slotNumber: i + 1\n        });\n        usedPlayers.add(player.player_id);\n        console.log(`MyRoster: Added ${player.name} to starters as ${position}`);\n      }\n\n      // Add empty positions for unfilled slots\n      for (let i = positionPlayers.length; i < needed; i++) {\n        emptyStarters.push({\n          starterType: position,\n          slotNumber: i + 1,\n          isEmpty: true\n        });\n        console.log(`MyRoster: Added empty ${position} slot ${i + 1}`);\n      }\n    });\n\n    // Fill FLEX positions (RB, WR, TE eligible)\n    const flexNeeded = starterCounts['FLEX'] || 0;\n    const flexEligible = allPlayers.filter(p => \n      ['RB', 'WR', 'TE'].includes(p.originalPosition) && !usedPlayers.has(p.player_id)\n    );\n    \n    // Add filled FLEX positions\n    for (let i = 0; i < flexNeeded && i < flexEligible.length; i++) {\n      const player = flexEligible[i];\n      starters.push({\n        ...player,\n        starterType: 'FLEX',\n        slotNumber: i + 1\n      });\n      usedPlayers.add(player.player_id);\n      console.log(`MyRoster: Added ${player.name} to starters as FLEX`);\n    }\n\n    // Add empty FLEX positions\n    for (let i = flexEligible.length; i < flexNeeded; i++) {\n      emptyStarters.push({\n        starterType: 'FLEX',\n        slotNumber: i + 1,\n        isEmpty: true\n      });\n      console.log(`MyRoster: Added empty FLEX slot ${i + 1}`);\n    }\n\n    // Fill REC_FLEX positions (WR, TE eligible - Guillotine League)\n    const recFlexNeeded = starterCounts['REC_FLEX'] || 0;\n    const recFlexEligible = allPlayers.filter(p => \n      ['WR', 'TE'].includes(p.originalPosition) && !usedPlayers.has(p.player_id)\n    );\n    \n    // Add filled REC_FLEX positions\n    for (let i = 0; i < recFlexNeeded && i < recFlexEligible.length; i++) {\n      const player = recFlexEligible[i];\n      starters.push({\n        ...player,\n        starterType: 'REC_FLEX',\n        slotNumber: i + 1\n      });\n      usedPlayers.add(player.player_id);\n      console.log(`MyRoster: Added ${player.name} to starters as REC_FLEX`);\n    }\n\n    // Add empty REC_FLEX positions\n    for (let i = recFlexEligible.length; i < recFlexNeeded; i++) {\n      emptyStarters.push({\n        starterType: 'REC_FLEX',\n        slotNumber: i + 1,\n        isEmpty: true\n      });\n      console.log(`MyRoster: Added empty REC_FLEX slot ${i + 1}`);\n    }\n\n    // Fill SUPER_FLEX positions (QB, RB, WR, TE eligible)\n    const superFlexNeeded = starterCounts['SUPER_FLEX'] || 0;\n    const superFlexEligible = allPlayers.filter(p => \n      ['QB', 'RB', 'WR', 'TE'].includes(p.originalPosition) && !usedPlayers.has(p.player_id)\n    );\n    \n    // Add filled SUPER_FLEX positions\n    for (let i = 0; i < superFlexNeeded && i < superFlexEligible.length; i++) {\n      const player = superFlexEligible[i];\n      starters.push({\n        ...player,\n        starterType: 'SUPER_FLEX',\n        slotNumber: i + 1\n      });\n      usedPlayers.add(player.player_id);\n      console.log(`MyRoster: Added ${player.name} to starters as SUPER_FLEX`);\n    }\n\n    // Add empty SUPER_FLEX positions\n    for (let i = superFlexEligible.length; i < superFlexNeeded; i++) {\n      emptyStarters.push({\n        starterType: 'SUPER_FLEX',\n        slotNumber: i + 1,\n        isEmpty: true\n      });\n      console.log(`MyRoster: Added empty SUPER_FLEX slot ${i + 1}`);\n    }\n\n    // All remaining players go to bench\n    allPlayers.forEach(player => {\n      if (!usedPlayers.has(player.player_id)) {\n        bench.push(player);\n        console.log(`MyRoster: Added ${player.name} to bench`);\n      }\n    });\n\n    // Add empty bench slots\n    const currentBenchCount = bench.length;\n    for (let i = currentBenchCount; i < benchSlots; i++) {\n      emptyBench.push({\n        isEmpty: true,\n        slotNumber: i + 1\n      });\n      console.log(`MyRoster: Added empty bench slot ${i + 1}`);\n    }\n\n    console.log('MyRoster: Final counts - Starters:', starters.length, 'Empty Starters:', emptyStarters.length, 'Bench:', bench.length, 'Empty Bench:', emptyBench.length);\n    console.log('MyRoster: Used players:', Array.from(usedPlayers));\n\n    return { starters, bench, emptyStarters, emptyBench };\n  };\n\n  const getStarterTypeDisplay = (starterType, slotNumber) => {\n    const displays = {\n      'QB': `QB${slotNumber > 1 ? slotNumber : ''}`,\n      'RB': `RB${slotNumber > 1 ? slotNumber : ''}`,\n      'WR': `WR${slotNumber > 1 ? slotNumber : ''}`,\n      'TE': `TE${slotNumber > 1 ? slotNumber : ''}`,\n      'K': `K${slotNumber > 1 ? slotNumber : ''}`,\n      'DEF': `DEF${slotNumber > 1 ? slotNumber : ''}`,\n      'FLEX': `FLEX${slotNumber > 1 ? slotNumber : ''}`,\n      'REC_FLEX': `R-FLEX${slotNumber > 1 ? slotNumber : ''}`,\n      'SUPER_FLEX': `SF${slotNumber > 1 ? slotNumber : ''}`\n    };\n    return displays[starterType] || starterType;\n  };\n\n  const getStarterTypeColor = (starterType) => {\n    const colors = {\n      'QB': 'bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300',\n      'RB': 'bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300',\n      'WR': 'bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300',\n      'TE': 'bg-orange-100 dark:bg-orange-900/30 text-orange-700 dark:text-orange-300',\n      'K': 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-700 dark:text-yellow-300',\n      'DEF': 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300',\n      'FLEX': 'bg-indigo-100 dark:bg-indigo-900/30 text-indigo-700 dark:text-indigo-300',\n      'REC_FLEX': 'bg-cyan-100 dark:bg-cyan-900/30 text-cyan-700 dark:text-cyan-300',\n      'SUPER_FLEX': 'bg-pink-100 dark:bg-pink-900/30 text-pink-700 dark:text-pink-300'\n    };\n    return colors[starterType] || 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300';\n  };\n\n  if (!isVisible) return null;\n\n  if (loading) {\n    return (\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4\">\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <Users className=\"w-5 h-5 text-blue-600\" />\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">My Roster</h3>\n        </div>\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"></div>\n          <span className=\"ml-2 text-gray-600 dark:text-gray-300\">Loading roster...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4\">\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <Users className=\"w-5 h-5 text-blue-600\" />\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">My Roster</h3>\n        </div>\n        <div className=\"text-red-600 dark:text-red-400 text-center py-4\">\n          Error: {error}\n        </div>\n      </div>\n    );\n  }\n\n  if (!rosterData) return null;\n\n  const { starters, bench, emptyStarters, emptyBench } = getAllStartersAndBench();\n  const totalPlayers = starters.length + bench.length;\n  const totalSlots = starters.length + emptyStarters.length + bench.length + emptyBench.length;\n\n  // Show empty state only if no roster settings are available\n  if (!rosterData.roster_settings) {\n    return (\n      <div className={clsx(\n        \"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\",\n        isSidebar ? \"p-3\" : \"p-4\"\n      )}>\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <Users className=\"w-5 h-5 text-blue-600\" />\n          <h3 className={clsx(\"font-semibold text-gray-900 dark:text-white\", isSidebar ? \"text-base\" : \"text-lg\")}>\n            My Roster\n          </h3>\n        </div>\n        <div className=\"text-center py-8\">\n          <Users className=\"w-12 h-12 mx-auto mb-4 text-gray-300 dark:text-gray-600\" />\n          <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">Roster Not Available</h4>\n          <p className=\"text-gray-600 dark:text-gray-300 text-sm\">\n            Roster information is not available for this league.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={clsx(\n      \"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\",\n      isSidebar ? \"p-3\" : \"p-4\"\n    )}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-2\">\n          <Users className=\"w-5 h-5 text-blue-600\" />\n          <h3 className={clsx(\"font-semibold text-gray-900 dark:text-white\", isSidebar ? \"text-base\" : \"text-lg\")}>\n            My Roster\n          </h3>\n          <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n            ({totalPlayers}/{totalSlots} filled)\n          </span>\n          {rosterData.drafted_this_draft > 0 && (\n            <span className=\"text-sm text-green-600 dark:text-green-400 bg-green-100 dark:bg-green-900/30 px-2 py-1 rounded\">\n              +{rosterData.drafted_this_draft} drafted\n            </span>\n          )}\n        </div>\n        {!isSidebar && (\n          <div className=\"flex items-center space-x-1 text-sm text-gray-600 dark:text-gray-300\">\n            <User className=\"w-4 h-4\" />\n            <span>{rosterData.username}</span>\n          </div>\n        )}\n      </div>\n\n      <div className=\"space-y-4\">\n        {/* Starters Section */}\n        {(starters.length > 0 || emptyStarters.length > 0) && (\n          <div className=\"border border-green-200 dark:border-green-800 rounded-lg\">\n            <div className=\"px-3 py-2 bg-green-50 dark:bg-green-900/20 border-b border-green-200 dark:border-green-800 flex items-center justify-between\">\n              <span className=\"font-medium text-green-800 dark:text-green-300 uppercase tracking-wide text-sm\">\n                Starting Lineup ({starters.length}/{starters.length + emptyStarters.length})\n              </span>\n            </div>\n            <div className=\"bg-white dark:bg-gray-800\">\n              {/* Filled starter positions */}\n              {starters.map((player, index) => (\n                <div\n                  key={`starter-${player.player_id}-${player.starterType}-${index}`}\n                  className={clsx(\n                    \"px-3 py-2 flex items-center justify-between border-l-4 border-green-400\",\n                    index !== starters.length + emptyStarters.length - 1 && \"border-b border-gray-200 dark:border-gray-700\",\n                    getStatusColor(player.status)\n                  )}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={clsx(\n                      \"text-xs font-medium px-2 py-1 rounded uppercase tracking-wide\",\n                      getStarterTypeColor(player.starterType)\n                    )}>\n                      {getStarterTypeDisplay(player.starterType, player.slotNumber)}\n                    </span>\n                    {getStatusIcon(player.status)}\n                    <span className={clsx(\"font-medium\", getPositionColor(player.originalPosition))}>\n                      {player.name}\n                    </span>\n                    <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                      {player.team !== 'FA' ? player.team : 'Free Agent'}\n                    </span>\n                    {player.rank && player.rank !== 999 && (\n                      <span className=\"text-xs text-green-600 dark:text-green-400 bg-green-100 dark:bg-green-900/30 px-1 rounded\">\n                        #{player.rank}\n                      </span>\n                    )}\n                    {player.pick_no && (\n                      <span className=\"text-xs text-green-600 dark:text-green-400\">\n                        Pick #{player.pick_no}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              ))}\n              \n              {/* Empty starter positions */}\n              {emptyStarters.map((emptySlot, index) => (\n                <div\n                  key={`empty-starter-${emptySlot.starterType}-${emptySlot.slotNumber}`}\n                  className={clsx(\n                    \"px-3 py-2 flex items-center justify-between border-l-4 border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700/50\",\n                    starters.length + index !== starters.length + emptyStarters.length - 1 && \"border-b border-gray-200 dark:border-gray-700\"\n                  )}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={clsx(\n                      \"text-xs font-medium px-2 py-1 rounded uppercase tracking-wide\",\n                      \"bg-gray-200 dark:bg-gray-600 text-gray-600 dark:text-gray-300\"\n                    )}>\n                      {getStarterTypeDisplay(emptySlot.starterType, emptySlot.slotNumber)}\n                    </span>\n                    <span className=\"text-gray-500 dark:text-gray-400 italic\">\n                      Empty - Need to draft\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Bench Section */}\n        {(bench.length > 0 || emptyBench.length > 0) && (\n          <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg\">\n            <div className=\"px-3 py-2 bg-gray-50 dark:bg-gray-700 border-b border-gray-200 dark:border-gray-600 flex items-center justify-between\">\n              <span className=\"font-medium text-gray-700 dark:text-gray-300 uppercase tracking-wide text-sm\">\n                Bench ({bench.length}/{bench.length + emptyBench.length})\n              </span>\n            </div>\n            <div className=\"bg-gray-50 dark:bg-gray-800\">\n              {/* Filled bench positions */}\n              {bench.map((player, index) => (\n                <div\n                  key={`bench-${player.player_id}-${index}`}\n                  className={clsx(\n                    \"px-3 py-2 flex items-center justify-between\",\n                    index !== bench.length + emptyBench.length - 1 && \"border-b border-gray-200 dark:border-gray-700\",\n                    getStatusColor(player.status)\n                  )}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={clsx(\n                      \"text-xs font-medium px-2 py-1 rounded uppercase tracking-wide bg-gray-100 dark:bg-gray-700\",\n                      getPositionColor(player.originalPosition)\n                    )}>\n                      {player.originalPosition}\n                    </span>\n                    {getStatusIcon(player.status)}\n                    <span className={clsx(\"font-medium\", getPositionColor(player.originalPosition))}>\n                      {player.name}\n                    </span>\n                    <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                      {player.team !== 'FA' ? player.team : 'Free Agent'}\n                    </span>\n                    {player.rank && player.rank !== 999 && (\n                      <span className=\"text-xs text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-1 rounded\">\n                        #{player.rank}\n                      </span>\n                    )}\n                    {player.pick_no && (\n                      <span className=\"text-xs text-green-600 dark:text-green-400\">\n                        Pick #{player.pick_no}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              ))}\n              \n              {/* Empty bench positions */}\n              {emptyBench.map((emptySlot, index) => (\n                <div\n                  key={`empty-bench-${emptySlot.slotNumber}`}\n                  className={clsx(\n                    \"px-3 py-2 flex items-center justify-between bg-gray-100 dark:bg-gray-700/50\",\n                    bench.length + index !== bench.length + emptyBench.length - 1 && \"border-b border-gray-200 dark:border-gray-700\"\n                  )}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-xs font-medium px-2 py-1 rounded uppercase tracking-wide bg-gray-200 dark:bg-gray-600 text-gray-600 dark:text-gray-300\">\n                      BENCH\n                    </span>\n                    <span className=\"text-gray-500 dark:text-gray-400 italic\">\n                      Empty bench slot\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {rosterData.roster_settings && (\n        <div className=\"mt-4 pt-3 border-t border-gray-200 dark:border-gray-700\">\n          <div className=\"grid grid-cols-2 gap-4 text-xs text-gray-500 dark:text-gray-400\">\n            <div>\n              <div className=\"font-medium text-gray-700 dark:text-gray-300 mb-1\">Roster Structure</div>\n              <div className=\"space-y-1\">\n                {Object.entries(rosterData.roster_settings.starter_counts).map(([position, count]) => (\n                  <div key={position} className=\"flex justify-between\">\n                    <span>{position}:</span>\n                    <span>{count}</span>\n                  </div>\n                ))}\n                <div className=\"flex justify-between\">\n                  <span>Bench:</span>\n                  <span>{rosterData.roster_settings.bench_slots || 0}</span>\n                </div>\n                {rosterData.roster_settings.taxi_slots > 0 && (\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-1\">\n                      <Shield className=\"w-3 h-3 text-blue-500\" />\n                      <span>Taxi:</span>\n                    </div>\n                    <span>{rosterData.roster_settings.taxi_slots}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n            <div>\n              <div className=\"font-medium text-gray-700 dark:text-gray-300 mb-1\">Status Legend</div>\n              <div className=\"space-y-1\">\n                <div className=\"flex items-center space-x-1\">\n                  <Clock className=\"w-3 h-3 text-green-500\" />\n                  <span>Drafted today</span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <Shield className=\"w-3 h-3 text-blue-500\" />\n                  <span>Taxi squad</span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <Cross className=\"w-3 h-3 text-red-500\" />\n                  <span>Injured Reserve</span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <div className=\"w-3 h-3 bg-gray-300 dark:bg-gray-600 rounded-sm\"></div>\n                  <span>Empty slot</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyRoster;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}