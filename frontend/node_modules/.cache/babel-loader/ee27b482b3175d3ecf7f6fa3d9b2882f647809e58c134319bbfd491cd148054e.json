{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';import axios from'axios';const useDraftData=function(){let initialDraftId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;const[data,setData]=useState(null);const[loading,setLoading]=useState(true);const[refreshing,setRefreshing]=useState(false);const[error,setError]=useState(null);const[lastUpdated,setLastUpdated]=useState(null);const[currentDraftId,setCurrentDraftId]=useState(initialDraftId);const fetchDraftData=useCallback(async function(){let draftId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:currentDraftId;if(!draftId){setLoading(false);return;}try{// Save current scroll position before fetching\nconst scrollPosition=window.scrollY;setError(null);const params=draftId?{draft_id:draftId}:{};const response=await axios.get('/api/draft/status',{params});setData(response.data);setLastUpdated(new Date());setLoading(false);// Restore scroll position after a brief delay to allow DOM updates\nsetTimeout(()=>{window.scrollTo(0,scrollPosition);},10);}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||err.message||'Failed to fetch draft data');setLoading(false);}},[currentDraftId]);const refreshData=useCallback(async function(){let draftId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:currentDraftId;if(!draftId)return;// Save current scroll position\nconst scrollPosition=window.scrollY;setRefreshing(true);try{setError(null);const params=draftId?{draft_id:draftId}:{};const response=await axios.get('/api/draft/refresh',{params});setData(response.data);setLastUpdated(new Date());// Restore scroll position after DOM updates\nsetTimeout(()=>{window.scrollTo(0,scrollPosition);setRefreshing(false);},10);}catch(err){var _err$response2,_err$response2$data;setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.error)||err.message||'Failed to refresh draft data');setRefreshing(false);}},[currentDraftId]);const setDraftId=useCallback(async draftId=>{setCurrentDraftId(draftId);setLoading(true);setData(null);// Set the draft ID on the backend\ntry{await axios.post('/api/draft/set',{draft_id:draftId});}catch(err){console.warn('Failed to set draft ID on backend:',err);}// Fetch data for the new draft\nawait fetchDraftData(draftId);},[fetchDraftData]);// Initial fetch\nuseEffect(()=>{if(currentDraftId){fetchDraftData();}else{setLoading(false);}},[fetchDraftData,currentDraftId]);// Auto-refresh every 30 seconds\nuseEffect(()=>{if(!currentDraftId)return;const interval=setInterval(()=>{if(!loading){// Use refreshData instead of fetchDraftData for auto-refresh\n// This preserves scroll position\nrefreshData();}},30000);// 30 seconds\nreturn()=>clearInterval(interval);},[refreshData,loading,currentDraftId]);return{data,loading,refreshing,error,lastUpdated,currentDraftId,setDraftId,refreshData,refetch:fetchDraftData};};export default useDraftData;","map":{"version":3,"names":["useState","useEffect","useCallback","axios","useDraftData","initialDraftId","arguments","length","undefined","data","setData","loading","setLoading","refreshing","setRefreshing","error","setError","lastUpdated","setLastUpdated","currentDraftId","setCurrentDraftId","fetchDraftData","draftId","scrollPosition","window","scrollY","params","draft_id","response","get","Date","setTimeout","scrollTo","err","_err$response","_err$response$data","message","refreshData","_err$response2","_err$response2$data","setDraftId","post","console","warn","interval","setInterval","clearInterval","refetch"],"sources":["/Users/edeclan/FantasyFootballTest/SleeperLiveDraftRankings/frontend/src/hooks/useDraftData.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\nconst useDraftData = (initialDraftId = null) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [currentDraftId, setCurrentDraftId] = useState(initialDraftId);\n\n  const fetchDraftData = useCallback(async (draftId = currentDraftId) => {\n    if (!draftId) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // Save current scroll position before fetching\n      const scrollPosition = window.scrollY;\n      \n      setError(null);\n      const params = draftId ? { draft_id: draftId } : {};\n      const response = await axios.get('/api/draft/status', { params });\n      setData(response.data);\n      setLastUpdated(new Date());\n      setLoading(false);\n      \n      // Restore scroll position after a brief delay to allow DOM updates\n      setTimeout(() => {\n        window.scrollTo(0, scrollPosition);\n      }, 10);\n      \n    } catch (err) {\n      setError(err.response?.data?.error || err.message || 'Failed to fetch draft data');\n      setLoading(false);\n    }\n  }, [currentDraftId]);\n\n  const refreshData = useCallback(async (draftId = currentDraftId) => {\n    if (!draftId) return;\n\n    // Save current scroll position\n    const scrollPosition = window.scrollY;\n    setRefreshing(true);\n\n    try {\n      setError(null);\n      const params = draftId ? { draft_id: draftId } : {};\n      const response = await axios.get('/api/draft/refresh', { params });\n      setData(response.data);\n      setLastUpdated(new Date());\n      \n      // Restore scroll position after DOM updates\n      setTimeout(() => {\n        window.scrollTo(0, scrollPosition);\n        setRefreshing(false);\n      }, 10);\n      \n    } catch (err) {\n      setError(err.response?.data?.error || err.message || 'Failed to refresh draft data');\n      setRefreshing(false);\n    }\n  }, [currentDraftId]);\n\n  const setDraftId = useCallback(async (draftId) => {\n    setCurrentDraftId(draftId);\n    setLoading(true);\n    setData(null);\n    \n    // Set the draft ID on the backend\n    try {\n      await axios.post('/api/draft/set', { draft_id: draftId });\n    } catch (err) {\n      console.warn('Failed to set draft ID on backend:', err);\n    }\n    \n    // Fetch data for the new draft\n    await fetchDraftData(draftId);\n  }, [fetchDraftData]);\n\n  // Initial fetch\n  useEffect(() => {\n    if (currentDraftId) {\n      fetchDraftData();\n    } else {\n      setLoading(false);\n    }\n  }, [fetchDraftData, currentDraftId]);\n\n  // Auto-refresh every 30 seconds\n  useEffect(() => {\n    if (!currentDraftId) return;\n\n    const interval = setInterval(() => {\n      if (!loading) {\n        // Use refreshData instead of fetchDraftData for auto-refresh\n        // This preserves scroll position\n        refreshData();\n      }\n    }, 30000); // 30 seconds\n\n    return () => clearInterval(interval);\n  }, [refreshData, loading, currentDraftId]);\n\n  return {\n    data,\n    loading,\n    refreshing,\n    error,\n    lastUpdated,\n    currentDraftId,\n    setDraftId,\n    refreshData,\n    refetch: fetchDraftData\n  };\n};\n\nexport default useDraftData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}